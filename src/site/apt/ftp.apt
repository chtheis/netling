Using The FTP Client

* Simple Example

 This is a minimal example (with no error handling) that connects to an FTP server and lists the files on the server:

%{code-snippet|id=simple|brush=java|file=src/site/snippet/ftp.java}

* Listing Files

 The <<listFiles()>> method returns a directory listing of files in the current directory on the remote server.

* Retrieving a File

 There are a few different ways to download a file. The easiest method is to use the <<<download()>>> convenience method:
 
%{code-snippet|id=filedownload0|brush=java|file=src/site/snippet/ftp.java}

 The second method takes an <<<OutputStream>>> which must be explicitly closed when the file transfer is complete.  

%{code-snippet|id=filedownload1|brush=java|file=src/site/snippet/ftp.java}

 The second method returns an <<<InputStream>>>, which must also be explicitly closed when the file transfer is completed. This method requires that you call <<<completePendingCommand()>>> when the file transfer is complete (in order to consume the server response status).

%{code-snippet|id=filedownload2|brush=java|file=src/site/snippet/ftp.java}

* Setting file transfer mode

In order to explicitly set ASCII or binary file type on the file download, use <<setFileType()>>.

* Storing a File


* Setting the character set encoding 

  The <<FTPClient>> class supports setting arbitrary character set encoding for the control connection. ALthough historically FTP servers have supported ASCII character sets only, an FTP server that implements RFC 2640 supports UTF8 (and will make this known via the <<FEAT>> command).
 
 To set the control encoding to UTF-8, use:
 
 <<client.setControlEncoding("UTF8");>>

* 




